% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/svdr.R
\name{svdr}
\alias{svdr}
\title{Find a few approximate largest singular values and corresponding
singular vectors of a matrix.}
\usage{
svdr(x, k, it = 3, extra = 10, center = NULL, Q = NULL)
}
\arguments{
\item{x}{numeric real- or complex-valued matrix or real-valued sparse matrix.}

\item{k}{dimension of subspace to estimate (number of approximate singular values to compute).}

\item{it}{number of algorithm iterations}

\item{extra}{number of extra vectors of dimension \code{ncol(x)}, large values generally improve accuracy and performance.}

\item{center}{optional column centering vector whose values are subtracted from each
column of \code{A} or, optionally, use \code{center=TRUE} as shorthand for \code{center=colMeans(x)}.
Used for efficient principal components computation.}

\item{Q}{optiona initial random matrix, defaults to a matrix of size \code{ncol(x)} by \code{k + extra} with
entries sampled from a normal random distribution.}
}
\value{
Returns a list with entries:
\describe{
  \item{d:}{ k approximate singular values}
  \item{u:}{ k approximate left singular vectors}
  \item{v:}{ k approximate right singular vectors}
  \item{mprod:}{ The total number of matrix vector products carried out}
}
}
\description{
The randomized method for truncated SVD by P. G. Martinsson and colleagues
finds a few approximate largest singular values and corresponding
singular vectors of a sparse or dense matrix. It is a fast and
memory-efficient way to compute a partial SVD, similar in performance
for many problems to \code{\link{irlba}}. The \code{svdr} method
is a block method and may produce more accurate estimations with
less work for problems with clustered large singular values (see
the examples). In other problems, \code{irlba} may exhibit faster
convergence.
}
\examples{
set.seed(1)

A <- matrix(runif(400), nrow=20)
svdr(A, 3)$d

# Compare with svd
svd(A)$d[1:3]

# Compare with irlba
irlba(A, 3)$d

\dontrun{
# A problem with clustered large singular values where svdr out-performs irlba.
tprolate <- function(n, w=0.25)
{
  a <- rep(0, n)
  a[1] <- 2 * w
  a[2:n] <- sin( 2 * pi * w * (1:(n-1)) ) / ( pi * (1:(n-1)) )
  toeplitz(a)
}

x <- tprolate(512)
set.seed(1)
tL <- system.time(L <- irlba(x, 20))
tR <- system.time(R <- svdr(x, 20))
S <- svd(x)
data.frame(time=c(tL[3], tR[3]),
           error=sqrt(c(crossprod(L$d - S$d[1:20]), crossprod(R$d - S$d[1:20]))),
           row.names=c("IRLBA", "Randomized SVD"))

}
}
\references{
Finding structure with randomness: Stochastic algorithms for constructing
approximate matrix decompositions N. Halko, P. G. Martinsson, J. Tropp. Sep. 2009.
}
